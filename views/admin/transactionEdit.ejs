<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Transaction Edit</title>
    <!-- CSS Framework -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
    <!-- Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <style>
        .main-content header {
            margin-bottom: 20px;
        }
        
        .form-section {
            background-color: white;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        
        .form-section h3 {
            margin-bottom: 20px;
            font-size: 24px;
        }
        
        .table input {
            width: 100%;
            border: none;
            outline: none;
            background: transparent;
        }
        
        .table input:focus {
            border-bottom: 1px solid #007bff;
        }
        
        @media (max-width: 768px) {          
                    .table-responsive {
                        overflow-x: auto; /* Allow horizontal scrolling for tables */
                    }
        
            .form-section {
                padding: 15px;
            }
        
            .table th, .table td {
                padding: 8px;
            }
        
            .form-section h3 {
                font-size: 20px;
            }
        
            .table th {
                font-size: 12px;
            }
        
            .table input {
                padding: 8px;
                font-size: 14px;
                width: 70px;
            }
        
            .row label {
                font-size: 14px;
            }
        
            .form-select {
                font-size: 14px;
            }
        
            .btn {
                font-size: 14px;
            }
        }
            </style>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f6f9;
            padding: 20px;
        }
        .main-content {
            max-width: 1200px;
            margin: 0 auto;
        }
        .hamburger {
            cursor: pointer;
            font-size: 1.5rem;
            color: #333;
        }
        .card {
            border: none;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        
        @media (max-width: 768px) {
            
            .table-responsive {
                overflow-x: auto; 
            }
        }

        .btn-primary,
        .btn-secondary {
            margin-right: 10px; 
        }
    </style>

</head>
<body>
   
    <%- include('./navbar.ejs') %>
    <!-- Main Content -->
    <div class="main-content">
        <!-- Header Section -->
        <div class="mb-4 d-flex justify-content-between align-items-center">
            <h1 class="fw-bold">Transaction Edit</h1>
            <i class="fas fa-bars hamburger" id="hamburger"></i>
        </div>
            <!-- Add Sale Form -->
            <section class="form-section mt-4">
                <form action="/admin/transactionEdit" method="POST">
                    <!-- Existing fields -->
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <input type="hidden" name="transactionType" id="" value="<%= transactionDetails.transaction_type %>">
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="partyName" class="form-label">Party Name *</label>
                                <input type="text" id="partyName" name="partyId" class="form-control" placeholder="Enter Party Name"  list="partySuggestions" oninput="partyChange(this)"  value="<%= current_party.PartyName %>" required>
                                <input type="hidden" id="partyId" name="partyName" value="<%= current_party.id %>" required>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="number" class="form-label">Phone Number *</label>
                                <input type="number" id="phone" name="phone" class="form-control"
                                    placeholder="Enter Phone Number" value="<%= current_party.Phone %>" required>
                            </div>
                        </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="Invoice Number" class="form-label">Invoice Number *</label>
                            <input type="text" id="invoiceNumber" name="invoiceNumber" class="form-control"
                                placeholder="Enter Invoice Number" value="<%= transactionDetails.invoice_number%>"  required>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-3">
                            <label for="Payment Type">Payment Type *</label>
                            <select id="paymentType" name="paymentType" class="form-select">
                                <option <%= transactionDetails.payment_type === 'Credit'? 'selected':'' %> value="credit">Credit</option>
                                <option <%= transactionDetails.payment_type === 'Cash'? 'selected':'' %> value="cash">Cash</option>
                                <option <%= transactionDetails.payment_type=== 'Online'? 'selected':'' %> value="online">Online</option>

                            </select>
                        </div>
                        <input type="hidden" value="<%= transactionDetails.id %>" name="transaction_id">
                       
                        
                        <div class="col-md-3">
                            <label for="form-date" class="form-label">Date *</label>
                            <input type="date" id="form-date" name="date" class="form-control">
                        </div>
                    </div>
                    
                    </div>

                    <!-- Products Table -->
                    <h4>Products</h4>
                    <div class="table-responsive">
                    <table class="table table-bordered" id="table">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Item</th>
                                <th>Quantity</th>
                                <th>Unit<p style="font-size: 12px; color: gray;">(kg,mtr,ltr,pac)</p>
                                </th>
                                <th>Price/Unit<p style="font-size: 12px; color: gray;">(Price per Unit)</p>
                                </th>
                                <th>Total (SAR)</th>
                                <th>Delivered<p style="font-size: 12px; color: gray;">(Balance)</p></th>
                                <th>Action</th>
                                
                            </tr>
                        </thead>
                        <tbody id="productTableBody">
                            <% transactionProducts.forEach((product,index) => { %>
                                <tr>
                              <td><%= index+1 %></td>
                              <td><input type="text" id="productName<%= index %>" name="products[<%= index %>][item]" list="productSuggestions" onchange="sugesstion(this,'<%= index %>')" value="<%= product.product_name %>" ></td>
                              <td><input type="number" name="products[<%= index %>][quantity]" oninput="updateProductTotal(this)" value="<%= product.quantity %>" ></td>
                              <td><input type="text" id="unit<%= index %>" name="products[<%= index %>][unit]" value="<%= product.unit %>" required ></td>
                              <td><input type="text" id="priceInput<%= index %>" name="products[<%= index %>][pricePerUnit]" oninput="updateProductTotal(this)" value="<%= product.price %>"  ></td>
                              <input type="hidden" id="discount<%= index %>" name="products[<%= index %>][discount]" oninput="updateProductTotal(this)" value="<%= product.discount %>"  >
                              <input type="hidden" name="products[<%= index %>][tax]" oninput="updateProductTotal(this)" value="<%= product.tax_rate %>"  >
                              <td><input type="text" id="productId" name="products[<%= index %>][productTotal]" onchange="updateSaleTotal(this)" value="<%= product.total %>"  ></td>
                              <td><div class="d-flex"><input type="text" id="deliveredQuantity" name="products[<%= index %>][deliveredQuantity]" value="<%= product.delivered_quantity?product.delivered_quantity:'0' %>"><span style="color: rgb(95, 95, 95);">(<%= product.delivered_quantity? product.quantity - product.delivered_quantity:'N/A'  %>)</span></div></td>
                              <td>
                                <div class="d-flex">
                                    <button type="button" class="btn btn-success btn-sm" onclick="makeFree(this,'<%= index %>')">Free</button>
                                    <button type="button" class="btn btn-warning btn-sm ms-2" data-bs-toggle="modal" data-bs-target="#returnItemModal"  data-item-id="<%= product.id %>">Return</button>
                                    <button type="button" class="btn btn-danger btn-sm ms-2" onclick="removeRow(this,'<%= product.id %>','<%=product.quantity%>')">Remove</button>
                                    
                                </div>
                              </td>
                              <input type="hidden" id="saleProduct_id" name="products[<%= index %>][saleProduct_id]" value="<%= product.id %>">
                              <input type="hidden" id="itemId" name="products[<%= index %>][itemId]" value="<%= product.item_id %>" >
                              <input type="hidden" id="sale_id" name="products[<%= index %>][saleId]" value="<%= product.sale_id %>" >
                            </tr>
                              <% });  %>
                              
                        </tbody>
                    </table>
                </div>
                    <!-- <p style="font-size: 12px; color: rgba(255, 0, 0, 0.7);">Note: Please remove the unwanted rows</p> -->
                    <button type="button" class="btn btn-secondary mb-3" onclick="addRow()" >Add Row</button>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="TotalAmount" class="form-label">Total *</label>
                            <input type="text" id="totalAmount" name="totalAmount" class="form-control" value="<%= transactionDetails.total_amount%>" onchange="updateBalanceDue()" required>
                        </div>
                    </div>
                    <button type="button" class="btn btn-warning mb-3" onclick="roundTotal()">Round Total</button>
                    <button type="button" class="btn btn-warning mb-3" onclick="roundDecimalsOnly()">Round Decimals</button>
                    <script>
                        function roundTotal() {
                         const totalAmount = parseFloat(document.getElementById('totalAmount').value);
                         
                         if (!isNaN(totalAmount)) {
                             const roundedTotal = Math.round(totalAmount / 5) * 5;
                             document.getElementById('totalAmount').value = roundedTotal;
                             updateBalanceDue()
                         } else {
                             alert('Please enter a valid number');
                         }
                     }
                     function roundDecimalsOnly() {
                         const totalAmount = parseFloat(document.getElementById('totalAmount').value);
                         
                         if (!isNaN(totalAmount)) {
                             const roundedDecimals = totalAmount.toFixed(2);
                             document.getElementById('totalAmount').value = roundedDecimals;
                             updateBalanceDue()
                         } else {
                             alert('Please enter a valid number');
                         }
                     }
                     </script>
                    <div class="row mb-3">
                        <div class="col-md-3">
                            <label for="recieved" id="remaining" class="form-label">Received *</label>
                            <input type="text" id="received" name="recieved" class="form-control" value="<%= transactionDetails.received_amount %>" oninput="updateReceived()" required>
                        </div>
                        <div class="col-md-3">
                            <label for="balanceDue" class="form-label">Balance Due *</label>
                            <input type="text" id="balanceDue" name="balanceDue" class="form-control" value="<%= transactionDetails.balance_due%>" required>
                        </div>
                    </div>

                    <div class="d-flex justify-content-end mt-3">
                        <button type="submit" class="btn btn-primary">Save Sale</button>
                        <a href="<%= previousRoute %>" class="btn btn-secondary ms-2">Cancel</a>
                    </div>
                </form>
            </section>
        </div>
    </div>
    
</body>

<div class="modal fade" id="returnItemModal" tabindex="-1" aria-labelledby="returnItemModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="returnItemModalLabel">Return</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            
            <div class="modal-body">
                <p>Item ID: <span id="item-id-display"></span></p>
                <form action="/admin/return" method="POST">
                    <div class="mb-3">
                        <label for="companyName" class="form-label">Return Quantity</label>
                        <input type="text" class="form-control" id="quantity" placeholder="Enter the quantity to return"  name="quantity" required>
                        <input type="hidden" id="item-id-input" name="item_id">
                        <!-- <label for="companyName" class="form-label">Reason</label>
                        <input type="text" class="form-control" id="quantity" placeholder="Enter the Reason for return"  name="reason"> -->
                    </div>
                    <button type="submit" class="btn btn-success">Save</button>
                </form>
                <script>document.addEventListener('DOMContentLoaded', () => {
                    const returnItemModal = document.getElementById('returnItemModal');
                    returnItemModal.addEventListener('show.bs.modal', (event) => {
                      // Button that triggered the modal
                      const button = event.relatedTarget;
                      // Extract value from data-* attribute
                      const itemId = button.getAttribute('data-item-id');
                  
                      // Update the modal content
                      const itemIdDisplay = document.getElementById('item-id-display');
                      const itemIdInput = document.getElementById('item-id-input');
                      itemIdDisplay.textContent = itemId;
                      itemIdInput.value = itemId;
                    });
                  });</script>
            </div>
        </div>
    </div>
</div>
<script>

function partyChange(element){
        const partyId = document.getElementById('partyId')
        const phoneInput = document.getElementById('phone')
        const parties = <%-JSON.stringify(parties)%>
        parties.map(party=>{
            if(party.PartyName == element.value){
                phoneInput.value = party.Phone
                partyId.value = party.id
            }
        })    
    }

    
</script>   
<script>
    const backend_date = <%- JSON.stringify(transactionDetails.date) %>;

    function setTransactionDate() {
        const dateInput = document.getElementById('form-date');
        const dateObject = new Date(backend_date);
        const localDate = new Date(dateObject.getTime() - dateObject.getTimezoneOffset() * 60000);
        const formattedDate = localDate.toISOString().split('T')[0];
        dateInput.value = formattedDate;
    }


    window.onload = setTransactionDate;
</script>

<script>
    // In your JavaScript, maintain a counter for dynamically added rows.
let currentIndex = <%= transactionProducts.length %>;

function addRow() {
 const tableBody = document.getElementById("productTableBody");
 const row = document.createElement("tr");
 
 row.innerHTML = `
 <tr>
     <td>${currentIndex + 1}</td>
     <td><input type="text" id="productName${currentIndex}" name="products[${currentIndex}][item]" list="productSuggestions" onchange="sugesstion(this, '${currentIndex}')" required></td>
     <td><input type="number" name="products[${currentIndex}][quantity]" oninput="updateProductTotal(this)" required></td>
     <td><input type="text" id="unit${currentIndex}" name="products[${currentIndex}][unit]" required ></td>
     <td><input type="text" id="priceInput${currentIndex}" name="products[${currentIndex}][pricePerUnit]" oninput="updateProductTotal(this)" required ></td>
     <td><input type="text" id="discount${currentIndex}" name="products[${currentIndex}][discount]" oninput="updateProductTotal(this)" required ></td>
     <td><input type="text" name="products[${currentIndex}][tax]" oninput="updateProductTotal(this)" required ></td>
     <td><input type="text" id="productTotal" name="products[${currentIndex}][productTotal]" onchange="updateSaleTotal(this)" required ></td>
      <td><div class="d-flex"><input type="text" id="deliveredQuantity" name="products[${currentIndex}][deliveredQuantity]" ><span style="color: rgb(95, 95, 95);">(N/A)</span></div></td>
     <input type="hidden" id="productId" name="products[${currentIndex}][productId]" >
     <input type="hidden" id="itemId" name="products[${currentIndex}][itemId]" value="" >
     
     <td><div class="d-flex"><button type="button" class="btn btn-success btn-sm" onclick="makeFree(this,${currentIndex})">Free</button>
            <button type="button" class="btn btn-danger btn-sm ms-2" onclick="removeRow(this)">Remove</button></div></td>
            </tr>
 `;
 
 tableBody.appendChild(row);
 currentIndex++; // Increment the index for the next row.
}


     function removeRow(button,id,quantity) {

        Swal.fire({
        title: "Do you want Remove?",
        showDenyButton: true,
        confirmButtonText: "Save",
        denyButtonText: `Don't save`
        }).then((result) => {
        if (result.isConfirmed) {
         Swal.fire("Saved!", "", "success");
              fetch(`/admin/removeProduct?id=${id}&&quantity=${quantity}`)
          const row = button.closest('tr');
          row.remove();
            updateRowNumbers();
            productTotalInput = document.getElementById('productTotal');
        productTotalInput.dispatchEvent(new Event('change'));
  } else if (result.isDenied) {
    Swal.fire("Changes are not saved", "", "info");
  }
});

     }

     function updateRowNumbers() {
         const rows = document.querySelectorAll('#productTableBody tr');
         rows.forEach((row, index) => {
             row.cells[0].textContent = index + 1; // Update row number in the first column
         });
     }

     function updateProductTotal(input) {
         const row = input.closest('tr');
         const quantity = parseFloat(row.querySelector(`[name^="products"][name$="[quantity]"]`)?.value) || 0;
         const pricePerUnit = parseFloat(row.querySelector(`[name^="products"][name$="[pricePerUnit]"]`)?.value) || 0;
         const discount = parseFloat(row.querySelector(`[name^="products"][name$="[discount]"]`)?.value) || 0;
         const tax = parseFloat(row.querySelector(`[name^="products"][name$="[tax]"]`)?.value) || 0;

         let productTotal = quantity * pricePerUnit;
         productTotal += (productTotal * tax) / 100; 
         productTotal -= (productTotal * discount) / 100; 

         row.querySelector(`[name^="products"][name$="[productTotal]"]`).value = productTotal.toFixed(2);

         productTotalInput = document.getElementById('productTotal');
        productTotalInput.dispatchEvent(new Event('change'));
     }

     function validateForm(event) {
         const rows = document.querySelectorAll('#productTableBody tr');
         const hasProduct = Array.from(rows).some(row => {
             return row.querySelector(`[name^="products"][name$="[item]"]`).value.trim() !== '';
         });

         if (!hasProduct) {
             alert('Please enter at least one product.');
             event.preventDefault();
         }
     }

 </script>
<datalist id="productSuggestions">
 <%if(products.length){ products.forEach(product=> {%>
     <option value="<%= product.item_name %>" >
         <% })}else{ %>
             <option value="No Products Found">
                 <% } %>
</datalist>
<datalist id="partySuggestions">
 <% if (parties.length) { %>
     <% parties.forEach(party => { %>
         <option value="<%= party.PartyName %>">
     <% }) %>
 <% } else { %>
     <option disabled value="No Party Found">No Party Found</option>
 <% } %>
</datalist>
<script>
 function sugesstion(element,count) {
     
         const selectedProductName = element.value;
         const products = <%- JSON.stringify(products) %>
         const transaction_products = <%-JSON.stringify(transactionProducts)%>
         
         const selectedProduct = products.find(
             (product) => product.item_name === selectedProductName
         );
         const transaction_type = <%-JSON.stringify(transactionDetails.transaction_type)%>
         console.log(transaction_type);
         

         if (selectedProduct) {
             // const row = element.target.closest('tr');
             document.getElementsByName(`products[${ count }][unit]`)[0].value = selectedProduct.unit;
             document.getElementsByName(`products[${ count }][pricePerUnit]`)[0].value = transaction_type =='purchase'? selectedProduct.purchase_price : selectedProduct.sale_price ;
             document.getElementsByName(`products[${ count }][discount]`)[0].value = selectedProduct.discount_value;
             document.getElementsByName(`products[${ count }][tax]`)[0].value = selectedProduct.tax_rate;
             document.getElementsByName(`products[${ count }][itemId]`)[0].value = selectedProduct.id;
             document.getElementsByName(`products[${ count }][saleId]`)[0].value = transaction_products.sale_id;
             
         }else{
             document.getElementsByName(`products[${ count }][unit]`)[0].value = ''
             document.getElementsByName(`products[${ count }][pricePerUnit]`)[0].value = ''
             document.getElementsByName(`products[${ count }][discount]`)[0].value = ''
             document.getElementsByName(`products[${ count }][tax]`)[0].value = ''
         }
 }

 function makeFree(element,count){
        const row = element.closest('tr')
        row.querySelector(`[name^="products"][name$="[productTotal]"]`).value = 0;
        productTotalInput = document.getElementById('productTotal');
        productTotalInput.dispatchEvent(new Event('change'));
    }
    
    function updateSaleTotal() {
    const element = document.getElementById('table')
    const rows = element.querySelectorAll('tr'); 
    const saleTotalInput = document.getElementById('totalAmount')
    let total = 0;

    rows.forEach((row) => {
        const productTotalInput = row.querySelector(`[name^="products"][name$="[productTotal]"]`);
        if (productTotalInput) {
            total += parseFloat(productTotalInput.value) || 0; 
        }
    });
    saleTotalInput.value = total
    saleTotalInput.dispatchEvent(new Event('change'));
    
}
function updateBalanceDue(){
    const saleTotalInput = document.getElementById('totalAmount')
    const balanceDue = document.getElementById('balanceDue')
    const received = document.getElementById('received')
    balanceDue.value = saleTotalInput.value;
    received.value = 0
}
function updateReceived(){
    const saleTotalInput = document.getElementById('totalAmount')
    const balanceDue = document.getElementById('balanceDue')
    const received = document.getElementById('received')
    balanceDue.value = Number(saleTotalInput.value).toFixed(4)- Number(received.value).toFixed(4);
}

</script>
<script>
    const sidebar = document.getElementById('sidebar');
    const overlay = document.getElementById('overlay');
    const hamburger = document.getElementById('hamburger');

    hamburger.addEventListener('click', () => {
        sidebar.classList.toggle('active');
        overlay.classList.toggle('active');
    });

    overlay.addEventListener('click', () => {
        sidebar.classList.remove('active');
        overlay.classList.remove('active');
    });
</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</html>